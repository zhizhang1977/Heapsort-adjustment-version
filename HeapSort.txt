堆排序的算法：

① 将待排序的序列构造成一个大顶堆（小顶堆）；

② 交换根节点与待排序序列的最后一个元素；

③ 将待排序序列调整为大顶堆（小顶堆），交换根节点与待排序序列的最后一个元素，循环进行至整个序列有序，最终得到一个递增（递减）序列。

堆排序的实现：

C语言

void HeapAdjust(int* arr, int n)

{

    int loc = 0;

    int tmp = 0;

    for(int i=n/2-1; i>=0; i--)    {

        loc = 2 * i + 1;

        if(loc+1 < n && arr[loc]<arr[loc+1]) {

            loc++;

        }

        if(arr[loc] > arr[i]) {

            tmp = arr[loc];

            arr[loc] = arr[i];

            arr[i] = tmp;

        }

    }

}

void HeapSort(int* arr, int len)

{

    int tmp;

    HeapAdjust(arr, len);

    for(int i=len-1; i>0; i--) {

        tmp = arr[i];

        arr[i] = arr[0];

        arr[0] = tmp;

        HeapAdjust(arr, i);

    }

}